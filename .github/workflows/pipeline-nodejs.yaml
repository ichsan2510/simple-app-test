name: nodejs

on:
  push:
    branches:
      - 'main'
    paths:
      - 'service/validation/**'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: gke-ichsan-setiawan    # Add your cluster name here.
  GKE_ZONE: us-central1   # Add your cluster zone here.
  IMAGE: validation

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Setup gcloud CLI
    - name: Setup GCloud
      uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - run: |-
        touch .env
        echo ${{ secrets.VALIDATION_SECRET }} >> .env

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GKE_SA_KEY }}
        # service_account: 'my-service-account@my-project.iam.gserviceaccount.com'

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v1'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Build the Docker image
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./service/${{ env.IMAGE }}
        platforms: linux/amd64
        push: true
        tags: ichsan25/${{ env.IMAGE }}:latest

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ls -a
        sed -i s#IMAGE#ichsan25/${{ env.IMAGE }}:latest#g ./service/${{ env.IMAGE }}/k8s/deployment.yaml
        kubectl apply -f ./service/${{ env.IMAGE }}/k8s
        kubectl rollout status deployment/${{ env.IMAGE }}